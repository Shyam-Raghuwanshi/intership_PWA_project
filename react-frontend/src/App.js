import Form from "./components/Form";
import React, { useEffect, useState } from "react";
import SignIn from "./components/(auth)/signin/page";
import SignUp from "./components/(auth)/signup/page";
import { BrowserRouter as Router, Routes, Route } from "react-router-dom";
import Footer from "./components/ui/footer";
import Header from "./components/ui/header";
import "./components/css/style.css";
import ResetPassword from "./components/(auth)/reset-password/page";
import "react-notifications/lib/notifications.css";
import Home from "./components/Home";
import ViewFriends from "./components/viewfriends"
import {
  NotificationContainer,
  NotificationManager,
} from "react-notifications";

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

function App() {
  // const navigate = useNavigate();
  const token = localStorage.getItem("token");
  const [user, setUser] = useState();

  function isTokenExpired(token) {
    if (!token || token == null) {
      setUser(false);
    }
    try {
      const decodedToken = JSON.parse(atob(token.split(".")[1]));
      const expirationTime = decodedToken.exp;
      if (Date.now() >= expirationTime * 1000) {
        setUser(false);
      } else {
        setUser(true);
      }
    } catch (error) {
      setUser(false);
      console.error("Error decoding or checking token:", error);
    }
  }

  function logout() {
    localStorage.removeItem("token");
    setUser(false);
    NotificationManager.success("You are logedout");
  }

  useEffect(() => {
    isTokenExpired(token);
  }, []);

  return (
    <html lang="en">
      <body
        className={` font-inter antialiased bg-white text-gray-900 tracking-tight`}
      >
        <div className="flex flex-col min-h-screen overflow-hidden supports-[overflow:clip]:overflow-clip">
          <Router>
            <Header user={user} setUser={setUser} logout={logout} />
            <Routes>
              <Route path="/" element={<Form user={user} />} />
              <Route path="/signup" element={<SignUp setUser={setUser} />} />
              <Route path="/signin" element={<SignIn setUser={setUser} />} />
              <Route path="/viewfriends" element={<ViewFriends />} />
              <Route path="/reset-password" element={<ResetPassword />} />
            </Routes>
            <Footer />
          </Router>
          <NotificationContainer />
        </div>
      </body>
    </html>
  );
}

export default App;
